<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="apiurl" elementType="Argument">
            <stringProp name="Argument.name">apiurl</stringProp>
            <stringProp name="Argument.value">apigateway.test.bnymellon.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="clientkey" elementType="Argument">
            <stringProp name="Argument.name">clientkey</stringProp>
            <stringProp name="Argument.value">9pXtw3lxqbrHfkqH8CfhA95V1IMa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="token" elementType="Argument">
            <stringProp name="Argument.name">token</stringProp>
            <stringProp name="Argument.value">Bearer 8e00476c-8f61-32fc-bb5f-4a070b2d3784</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mydashboard_hrreports" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mydashboard" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mydashboard_report" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;reportId&quot;: &quot;RPT_HEADCOUNT_MYD_FLASH_CHART&quot;,&#xd;
	&quot;version&quot;: &quot;1&quot;,&#xd;
	&quot;isPagingRequired&quot;: false,&#xd;
	&quot;isParamRequired&quot;:&quot;true&quot;,&#xd;
	&quot;viewType&quot;: &quot;GRID&quot;,&#xd;
	&quot;queryParams&quot;:[&#xd;
{&quot;paramName&quot;:&quot;USER_ID&quot;,&#xd;
&quot;paramDisplayName&quot;:null,&#xd;
&quot;paramOrder&quot;:1,&#xd;
&quot;paramValue&quot;:&quot;XECCTY9&quot;,&#xd;
&quot;paramKeyVal&quot;:null,&#xd;
&quot;paramDataType&quot;:&quot;string&quot;,&#xd;
&quot;dataFormat&quot;:null,&#xd;
&quot;multiples&quot;:false&#xd;
},&#xd;
{&#xd;
	&quot;paramName&quot;: &quot;P_date&quot;,&#xd;
	&quot;paramDisplayName&quot;: null,&#xd;
	&quot;paramOrder&quot;: 2,&#xd;
	&quot;paramValue&quot;: &quot;2018-05-31&quot;,&#xd;
	&quot;paramKeyVal&quot;: null,&#xd;
	&quot;paramDataType&quot;: &quot;date&quot;,&#xd;
	&quot;dataFormat&quot;: &quot;yyyy-MM-dd&quot;,&#xd;
	&quot;multiples&quot;: false&#xd;
},&#xd;
{&quot;paramName&quot;:&quot;P_emptype&quot;,&#xd;
&quot;paramDisplayName&quot;:null,&#xd;
&quot;paramOrder&quot;:3,&#xd;
&quot;paramValue&quot;:1,&#xd;
&quot;paramKeyVal&quot;:null,&#xd;
&quot;paramDataType&quot;:&quot;number&quot;,&#xd;
&quot;dataFormat&quot;:null,&#xd;
&quot;multiples&quot;:false},&#xd;
{&#xd;
	&quot;paramName&quot;: &quot;P_empseg&quot;,&#xd;
	&quot;paramDisplayName&quot;: null,&#xd;
	&quot;paramOrder&quot;: 4,&#xd;
	&quot;paramValue&quot;: &quot;ALL&quot;,&#xd;
	&quot;paramKeyVal&quot;: null,&#xd;
	&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
	&quot;dataFormat&quot;: null,&#xd;
	&quot;multiples&quot;: false&#xd;
},&#xd;
{&quot;paramName&quot;:&quot;P_empsec&quot;,&#xd;
&quot;paramDisplayName&quot;:null,&#xd;
&quot;paramOrder&quot;:5,&#xd;
&quot;paramValue&quot;:&quot;ALL&quot;,&#xd;
&quot;paramKeyVal&quot;:null,&#xd;
&quot;paramDataType&quot;:&quot;string&quot;,&#xd;
&quot;dataFormat&quot;:null,&#xd;
&quot;multiples&quot;:false},&#xd;
{&#xd;
	&quot;paramName&quot;: &quot;P_empbud&quot;,&#xd;
	&quot;paramDisplayName&quot;: null,&#xd;
	&quot;paramOrder&quot;: 6,&#xd;
	&quot;paramValue&quot;: &quot;ALL&quot;,&#xd;
	&quot;paramKeyVal&quot;: null,&#xd;
	&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
	&quot;dataFormat&quot;: null,&#xd;
	&quot;multiples&quot;: false&#xd;
},&#xd;
{&quot;paramName&quot;:&quot;P_empbud1&quot;,&#xd;
&quot;paramDisplayName&quot;:null,&#xd;
&quot;paramOrder&quot;:7,&#xd;
&quot;paramValue&quot;:&quot;ALL&quot;,&#xd;
&quot;paramKeyVal&quot;:null,&#xd;
&quot;paramDataType&quot;:&quot;string&quot;,&#xd;
&quot;dataFormat&quot;:null,&#xd;
&quot;multiples&quot;:false},&#xd;
{&#xd;
	&quot;paramName&quot;: &quot;P_empbud2&quot;,&#xd;
	&quot;paramDisplayName&quot;: null,&#xd;
	&quot;paramOrder&quot;: 8,&#xd;
	&quot;paramValue&quot;: &quot;ALL&quot;,&#xd;
	&quot;paramKeyVal&quot;: null,&#xd;
	&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
	&quot;dataFormat&quot;: null,&#xd;
	&quot;multiples&quot;: false&#xd;
},&#xd;
{&quot;paramName&quot;:&quot;P_empdept&quot;,&#xd;
&quot;paramDisplayName&quot;:null,&#xd;
&quot;paramOrder&quot;:9,&#xd;
&quot;paramValue&quot;:&quot;ALL&quot;,&#xd;
&quot;paramKeyVal&quot;:null,&#xd;
&quot;paramDataType&quot;:&quot;string&quot;,&#xd;
&quot;dataFormat&quot;:null,&#xd;
&quot;multiples&quot;:false},&#xd;
{&#xd;
	&quot;paramName&quot;: &quot;P_charttype&quot;,&#xd;
	&quot;paramDisplayName&quot;: null,&#xd;
	&quot;paramOrder&quot;: 10,&#xd;
	&quot;paramValue&quot;: 3,&#xd;
	&quot;paramKeyVal&quot;: null,&#xd;
	&quot;paramDataType&quot;: &quot;number&quot;,&#xd;
	&quot;dataFormat&quot;: null,&#xd;
	&quot;multiples&quot;: false&#xd;
},&#xd;
{&#xd;
		&quot;paramName&quot;: &quot;P_PAGING_REQUIRED&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_PAGING_REQUIRED&quot;,&#xd;
		&quot;paramOrder&quot;: 11,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;N&quot;&#xd;
	},&#xd;
{&#xd;
		&quot;paramName&quot;: &quot;P_SORTING_REQUIRED&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_SORTING_REQUIRED&quot;,&#xd;
		&quot;paramOrder&quot;: 12,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;N&quot;&#xd;
	},	&#xd;
{&#xd;
		&quot;paramName&quot;: &quot;P_IN_START_INDEX&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_IN_START_INDEX&quot;,&#xd;
		&quot;paramOrder&quot;: 13,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	},		&#xd;
{&#xd;
		&quot;paramName&quot;: &quot;P_IN_LAST_INDEX&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_IN_LAST_INDEX&quot;,&#xd;
		&quot;paramOrder&quot;: 14,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	},		&#xd;
{&#xd;
		&quot;paramName&quot;: &quot;P_IN_PAGE_SIZE&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_IN_PAGE_SIZE&quot;,&#xd;
		&quot;paramOrder&quot;: 15,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	},		&#xd;
	&#xd;
	{&#xd;
		&quot;paramName&quot;: &quot;P_SORT_FIELD&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_SORT_FIELD&quot;,&#xd;
		&quot;paramOrder&quot;: 16,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	},		&#xd;
	&#xd;
	{&#xd;
		&quot;paramName&quot;: &quot;P_SORT_ORDER&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;P_SORT_ORDER&quot;,&#xd;
		&quot;paramOrder&quot;: 17,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	},		&#xd;
		{&#xd;
		&quot;paramName&quot;: &quot;IN_DEBUG&quot;,&#xd;
		&quot;paramDisplayName&quot;: &quot;IN_DEBUG&quot;,&#xd;
		&quot;paramOrder&quot;: 22,&#xd;
		&quot;paramDataType&quot;: &quot;string&quot;,&#xd;
		&quot;paramValue&quot;: 1,&#xd;
		&quot;paramKeyVal&quot;: &quot;NULL&quot;&#xd;
	}	&#xd;
	]	}&#xd;
	</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apiurl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">hrds/v1/reports</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">SUM_JOB_ID</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.jobId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${CAN_SUM_POLL}</stringProp>
          </WhileController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mydashboard_jobid" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${apiurl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">hrds/v1/jobs/${SUM_JOB_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">SUM_POLL_STATUS;SUM_POLL_MESSAGE</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.jobExecutionStatus.requestStatus;$.jobExecutionStatus.reportExecutionError</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">REQUESTED ; 0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String x = vars.get(&quot;SUM_POLL_COUNT&quot;);
int y = Integer.parseInt(x);
y = y + 1;
String z = &quot;&quot; + y;
vars.put(&quot;SUM_POLL_COUNT&quot;, z);

if(y &gt;=100 || vars.get(&quot;SUM_POLL_STATUS&quot;).startsWith(&quot;Complete&quot;) || vars.get(&quot;SUM_POLL_STATUS&quot;).startsWith(&quot;Failed&quot;) || vars.get(&quot;SUM_JOB_ID&quot;).equals(&quot;0&quot;)  )
{
vars.put(&quot;CAN_SUM_POLL&quot;,&quot;false&quot;);
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mydashboard_report_instance" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${apiurl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">hrds/v1/report-instances/${SUM_JOB_ID}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">


if(!vars.get(&quot;SUM_POLL_MESSAGE&quot;).equals(&quot;No Data Found&quot;))
{

if (ResponseData.length == 0) {
    Failure = true;
    FailureMessage = &quot;Expected non - empty response&quot;;
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="VIZ_POLL_COUNT" elementType="Argument">
                <stringProp name="Argument.name">VIZ_POLL_COUNT</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="VIZ_POLL_STATUS" elementType="Argument">
                <stringProp name="Argument.name">VIZ_POLL_STATUS</stringProp>
                <stringProp name="Argument.value">REQUESTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="VIZ_JOB_ID" elementType="Argument">
                <stringProp name="Argument.name">VIZ_JOB_ID</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CAN_VIZ_POLL" elementType="Argument">
                <stringProp name="Argument.name">CAN_VIZ_POLL</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="VIZ_POLL_MESSAGE" elementType="Argument">
                <stringProp name="Argument.name">VIZ_POLL_MESSAGE</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SUM_POLL_COUNT" elementType="Argument">
                <stringProp name="Argument.name">SUM_POLL_COUNT</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SUM_POLL_STATUS" elementType="Argument">
                <stringProp name="Argument.name">SUM_POLL_STATUS</stringProp>
                <stringProp name="Argument.value">REQUESTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SUM_JOB_ID" elementType="Argument">
                <stringProp name="Argument.name">SUM_JOB_ID</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CAN_SUM_POLL" elementType="Argument">
                <stringProp name="Argument.name">CAN_SUM_POLL</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SUM_POLL_MESSAGE" elementType="Argument">
                <stringProp name="Argument.name">SUM_POLL_MESSAGE</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DTL_POLL_COUNT" elementType="Argument">
                <stringProp name="Argument.name">DTL_POLL_COUNT</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DTL_POLL_STATUS" elementType="Argument">
                <stringProp name="Argument.name">DTL_POLL_STATUS</stringProp>
                <stringProp name="Argument.value">REQUESTED</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DTL_JOB_ID" elementType="Argument">
                <stringProp name="Argument.name">DTL_JOB_ID</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CAN_DTL_POLL" elementType="Argument">
                <stringProp name="Argument.name">CAN_DTL_POLL</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DTL_POLL_MESSAGE" elementType="Argument">
                <stringProp name="Argument.name">DTL_POLL_MESSAGE</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\work\load-testing\Transactions\results-local\results-table.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
